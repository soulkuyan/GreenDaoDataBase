package com.visunex.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.android.greendaodatabase.entites.Patient;
import com.android.greendaodatabase.entites.PhotoData;
import com.android.greendaodatabase.entites.UserAccount;
import com.android.greendaodatabase.entites.Hospital;

import com.visunex.greendao.gen.PatientDao;
import com.visunex.greendao.gen.PhotoDataDao;
import com.visunex.greendao.gen.UserAccountDao;
import com.visunex.greendao.gen.HospitalDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig patientDaoConfig;
    private final DaoConfig photoDataDaoConfig;
    private final DaoConfig userAccountDaoConfig;
    private final DaoConfig hospitalDaoConfig;

    private final PatientDao patientDao;
    private final PhotoDataDao photoDataDao;
    private final UserAccountDao userAccountDao;
    private final HospitalDao hospitalDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        patientDaoConfig = daoConfigMap.get(PatientDao.class).clone();
        patientDaoConfig.initIdentityScope(type);

        photoDataDaoConfig = daoConfigMap.get(PhotoDataDao.class).clone();
        photoDataDaoConfig.initIdentityScope(type);

        userAccountDaoConfig = daoConfigMap.get(UserAccountDao.class).clone();
        userAccountDaoConfig.initIdentityScope(type);

        hospitalDaoConfig = daoConfigMap.get(HospitalDao.class).clone();
        hospitalDaoConfig.initIdentityScope(type);

        patientDao = new PatientDao(patientDaoConfig, this);
        photoDataDao = new PhotoDataDao(photoDataDaoConfig, this);
        userAccountDao = new UserAccountDao(userAccountDaoConfig, this);
        hospitalDao = new HospitalDao(hospitalDaoConfig, this);

        registerDao(Patient.class, patientDao);
        registerDao(PhotoData.class, photoDataDao);
        registerDao(UserAccount.class, userAccountDao);
        registerDao(Hospital.class, hospitalDao);
    }
    
    public void clear() {
        patientDaoConfig.clearIdentityScope();
        photoDataDaoConfig.clearIdentityScope();
        userAccountDaoConfig.clearIdentityScope();
        hospitalDaoConfig.clearIdentityScope();
    }

    public PatientDao getPatientDao() {
        return patientDao;
    }

    public PhotoDataDao getPhotoDataDao() {
        return photoDataDao;
    }

    public UserAccountDao getUserAccountDao() {
        return userAccountDao;
    }

    public HospitalDao getHospitalDao() {
        return hospitalDao;
    }

}
